import{M as f}from"./Menu-BPKdTlAo.js";import{_ as y,bS as h,bV as $,c4 as _,c1 as C,c5 as P,c6 as w,bX as g,b$ as D,a as A,b as e,d as a,bL as u,i as m,o as M,Y as l,t as c}from"./index-DRoCyVBH.js";import{P as T}from"./bootstrap.esm-B848_XlO.js";import{a as b}from"./index-C-z09IKS.js";h.add($,_,C);const B={name:"ManageExistingDatasets",mixins:[P],...w,data(){return{currentPopover:null}},components:{FontAwesomeIcon:g,Menu:f,"table-listing":D},methods:{async deleteDataset(s){await this.$fusekiService.deleteDataset(s),b(this,`Dataset ${s} deleted`),this.initializeData()},async backupDataset(s){const d=(await this.$fusekiService.backupDataset(s)).data.taskId;b(this,`Backup task ${d} scheduled. Click on tasks for more.`),this.initializeData()},hidePopover(){this.currentPopover.hide(),this.currentPopover=null},showPopover(s){if(this.currentPopover!==null){if(this.currentPopover.__id===s)return;this.hidePopover()}const t={html:!0,content:this.$refs[`${s}-content`],trigger:"manual",placement:"auto"},d=this.$refs[`${s}-button`];this.currentPopover=new T(d,t),this.currentPopover.__id=s,this.currentPopover.show()}}},I={class:"container-fluid"},N={class:"row mt-4"},q={class:"col-12"},x={class:"card"},E={class:"card-header"},S={class:"card-body"},V={class:"row"},F={class:"col"},z=["onClick"],L={class:"popover",role:"popover",hidden:""},G={class:"text-center"},O={class:"alert alert-danger"},X=["onClick"],Y=["id","onClick"],j={class:"popover",role:"popover",hidden:""},H={class:"text-center"},J={class:"alert alert-danger"},K=["onClick"],Q=["id","onClick"],R=["onClick"],U=["onClick"];function W(s,t,d,Z,tt,n){const p=m("Menu"),v=m("router-link"),r=m("FontAwesomeIcon"),k=m("table-listing");return M(),A("div",I,[e("div",N,[e("div",q,[t[17]||(t[17]=e("h2",null,"Manage datasets",-1)),e("div",x,[e("nav",E,[a(p)]),e("div",S,[e("div",null,[e("div",V,[e("div",F,[a(k,{fields:s.fields,items:s.items,"is-busy":s.isBusy},{empty:u(()=>[e("h4",null,[t[3]||(t[3]=l(" No datasets created - ")),a(v,{to:"/manage/new"},{default:u(()=>t[2]||(t[2]=[l(" add one ")])),_:1})])]),"cell(actions)":u(o=>[e("button",{onClick:i=>s.$router.push(`/dataset${o.item.name}/query`),type:"button",class:"btn btn-primary me-0 me-md-2 mb-2 mb-md-0 d-block d-md-inline-block dataset-query"},[a(r,{icon:"question-circle"}),t[4]||(t[4]=e("span",{class:"ms-1"},"query",-1))],8,z),e("div",L,[e("div",{ref:`delete-dataset-${o.item.name}-content`},[t[8]||(t[8]=e("div",null," Confirm ",-1)),e("div",G,[e("div",O,[l(" Are you sure you want to delete dataset "+c(o.item.name)+"?",1),t[5]||(t[5]=e("br",null,null,-1)),t[6]||(t[6]=e("br",null,null,-1)),t[7]||(t[7]=l("This action cannot be reversed. "))]),e("button",{onClick:i=>{n.hidePopover(),n.deleteDataset(o.item.name)},class:"btn btn-primary me-2"}," submit ",8,X),e("button",{onClick:t[0]||(t[0]=i=>n.hidePopover()),type:"button",class:"btn btn-secondary"}," cancel ")])],512)]),e("button",{id:`delete-dataset-${o.item.name}-button`,ref:`delete-dataset-${o.item.name}-button`,onClick:i=>n.showPopover(`delete-dataset-${o.item.name}`),type:"button",href:"#",class:"btn btn-primary me-0 me-md-2 mb-2 mb-md-0 d-block d-md-inline-block dataset-remove"},[a(r,{icon:"times-circle"}),t[9]||(t[9]=e("span",{class:"ms-1"},"remove",-1))],8,Y),e("div",j,[e("div",{ref:`backup-dataset-${o.item.name}-content`},[t[13]||(t[13]=e("div",null," Confirm ",-1)),e("div",H,[e("div",J,[l(" Are you sure you want to create a backup of dataset "+c(o.item.name)+"?",1),t[10]||(t[10]=e("br",null,null,-1)),t[11]||(t[11]=e("br",null,null,-1)),t[12]||(t[12]=l("This action may take some time to complete. "))]),e("button",{onClick:i=>{n.hidePopover(),n.backupDataset(o.item.name)},type:"button",class:"btn btn-primary me-2"}," submit ",8,K),e("button",{onClick:t[1]||(t[1]=i=>n.hidePopover()),type:"button",class:"btn btn-secondary"}," cancel ")])],512)]),e("button",{id:`backup-dataset-${o.item.name}-button`,ref:`backup-dataset-${o.item.name}-button`,onClick:i=>n.showPopover(`backup-dataset-${o.item.name}`),type:"button",href:"#",class:"btn btn-primary me-0 me-md-2 me-0 mb-2 mb-md-0 d-block d-md-inline-block dataset-backup"},[a(r,{icon:"download"}),t[14]||(t[14]=e("span",{class:"ms-1"},"backup",-1))],8,Q),e("button",{onClick:i=>s.$router.push(`/dataset${o.item.name}/upload`),type:"button",class:"btn btn-primary me-0 me-md-2 me-0 mb-2 mb-md-0 d-block d-md-inline-block dataset-add-data"},[a(r,{icon:"upload"}),t[15]||(t[15]=e("span",{class:"ms-1"},"add data",-1))],8,R),e("button",{onClick:i=>s.$router.push(`/dataset${o.item.name}/info`),type:"button",class:"btn btn-primary me-0 mb-md-0 d-block d-md-inline-block dataset-info"},[a(r,{icon:"tachometer-alt"}),t[16]||(t[16]=e("span",{class:"ms-1"},"info",-1))],8,U)]),_:1},8,["fields","items","is-busy"])])])])])])])])])}const it=y(B,[["render",W]]);export{it as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
