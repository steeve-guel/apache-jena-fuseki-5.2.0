import{bS as u,c0 as m,bU as v,c1 as f,c2 as p,_,bX as D,i as d,o as h,a as y,b as s,d as n,bL as c,c3 as l}from"./index-DRoCyVBH.js";import{d as S}from"./index-C-z09IKS.js";u.add(m,v,f,p);const b={name:"DatasetMenu",props:{datasetName:{type:String,required:!0}},components:{FontAwesomeIcon:D}},N={class:"nav nav-tabs card-header-tabs"},k={class:"nav-item"},x={class:"nav-item"},g={class:"nav-item"},w={class:"nav-item"};function C(a,t,e,r,$,q){const o=d("FontAwesomeIcon"),i=d("router-link");return h(),y("ul",N,[s("li",k,[n(i,{to:`/dataset/${e.datasetName}/query`,class:"nav-link","exact-active-class":"active"},{default:c(()=>[n(o,{icon:"question-circle"}),t[0]||(t[0]=s("span",{class:"ms-1"},"query",-1))]),_:1},8,["to"])]),s("li",x,[n(i,{to:`/dataset/${e.datasetName}/upload`,class:"nav-link","exact-active-class":"active"},{default:c(()=>[n(o,{icon:"upload"}),t[1]||(t[1]=s("span",{class:"ms-1"},"add data",-1))]),_:1},8,["to"])]),s("li",g,[n(i,{to:`/dataset/${e.datasetName}/edit`,class:"nav-link","exact-active-class":"active"},{default:c(()=>[n(o,{icon:"edit"}),t[2]||(t[2]=s("span",{class:"ms-1"},"edit",-1))]),_:1},8,["to"])]),s("li",w,[n(i,{to:`/dataset/${e.datasetName}/info`,class:"nav-link","exact-active-class":"active"},{default:c(()=>[n(o,{icon:"tachometer-alt"}),t[3]||(t[3]=s("span",{class:"ms-1"},"info",-1))]),_:1},8,["to"])])])}const A=_(b,[["render",C]]),B={props:{datasetName:{type:String,required:!0}},data(){return{isDatasetStatsLoading:null,serverData:{datasets:[]}}},computed:{currentDataset(){return this.serverData.datasets.find(a=>a["ds.name"]===`/${this.datasetName}`)},services(){return!this.currentDataset||!this.currentDataset["ds.services"]?null:this.currentDataset["ds.services"].slice().sort((a,t)=>a["srv.type"].localeCompare(t["srv.type"])).reduce((a,t)=>(a[t["srv.type"]]=t,a),{})}},methods:{async loadCurrentDataset(){this.isDatasetStatsLoading=!0;try{this.serverData=await this.$fusekiService.getServerData(),this.datasetStats=await this.$fusekiService.getDatasetStats(this.datasetName)}catch(a){S(this,a)}finally{this.isDatasetStatsLoading=null}}}},E={beforeRouteEnter(a,t,e){e(async r=>{l.on("connection:reset",r.loadCurrentDataset),await r.loadCurrentDataset()})},async beforeRouteUpdate(a,t,e){e(async r=>{await this.loadCurrentDataset()})},beforeRouteLeave(a,t,e){l.off("connection:reset"),e()}};export{A as M,E as a,B as c};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
